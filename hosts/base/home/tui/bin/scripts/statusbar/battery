#!/bin/zsh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

case $BLOCK_BUTTON in
	3) notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!
- Scroll to change adjust xbacklight." ;;
	4) xbacklight -inc 10 ;;
	5) xbacklight -dec 10 ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# acpi alternative
# acpi | sed "s/Battery [0-9]: //;s/[Dd]ischarging, /🔋/;s/[Nn]ot charging, /🛑/;s/[Cc]harging, /🔌/;s/[Uu]nknown, /♻️/;s/[Ff]ull, /⚡/;s/ \(remaining\|until charged\)//"; exit

capacity=$(cat "/sys/class/power_supply/BAT1/capacity" 2>/dev/null) || break
if [ $(cat "/sys/class/power_supply/BAT1/status") = "Discharging" ]
then
    case $capacity in
        [0-9]) printf "\x0c" ;;
        1[0-9]) printf "\x0d" ;;
        2[0-9]) printf "\x0d" ;;
        3[0-9]) printf "\x0e" ;;
        4[0-9]) printf "\x0e" ;;
        5[0-9]) printf "\x0f" ;;
        6[0-9]) printf "\x0f" ;;
        7[0-9]) printf "\x10" ;;
        8[0-9]) printf "\x10" ;;
        9[0-9]|10[0-9]) printf "\x10" ;;
    esac
elif [ $(cat "/sys/class/power_supply/BAT1/status") = "Charging" ]
then 
    case $capacity in
        [0-9]|1[0-9]) printf "\x0c" ;;
        2[0-9]|3[0-9]) printf "\x0d" ;;
        4[0-9]|5[0-9]) printf "\x0e" ;;
        6[0-9]|7[0-9]) printf "\x0f" ;;
        8[0-9]|9[0-9]) printf "\x10" ;;
        10[0-9]) printf "\x10" ;;
    esac
elif [ $(cat "/sys/class/power_supply/BAT1/status") = "Full" ]
then
    printf "\x10"
else
    printf "\x10"
fi
